import{u as l,a as o,h as i}from"./create-event.store-CGYEzEVj.js";import{ad as f,s as D,r as u,k as h,ae as y}from"./index-BDS4vS0l.js";const M=f("session-store",()=>{const c=l(),{eventId:n}=D(c),e=u({sessionType:"Registration",title:"",eventDay:"",startTime:"",duration:{hour:1,min:0},speakerId:"",description:""}),a=u([]),d=async()=>{const s=(await i.get(`/sessions/${n.value}`)).data;a.value=s},p=h(()=>a.value.map(t=>({id:t.id,speaker:t.speaker,title:t.title,start:o(`${t.eventDay} ${t.startTime}`,"YYYY-MM-DD HH:mm:ss").format(),end:o(`${t.eventDay} ${t.startTime}`,"YYYY-MM-DD HH:mm:ss").add(t.duration.hour,"hours").add(t.duration.min,"minutes").format()})));return{form:e,getSessionEvents:p,list:a,create:async()=>(e.value.eventId=n.value,(await i.post("/session",y(e.value))).data),getDuration:(t,s)=>{const r=o(s).diff(t,"minutes"),m=Math.trunc(r/60),v=r%60;return{hour:m,min:v}},resetForm:()=>{e.value={sessionType:"Registration",title:"",eventDay:"",startTime:"",duration:{hour:1,min:0},speakerId:"",description:""}},getList:d}});export{M as u};
